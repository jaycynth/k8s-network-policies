name: Deploy k0s Cluster

on:
  push:
    branches:
      - dev

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.x'

      - name: Install Ansible
        run: |
          python -m pip install --upgrade pip
          pip install ansible

      - name: Set up Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: 1.5.0

      - name: Change to infra directory
        run: cd infra

      - name: Run Terraform
        working-directory: infra
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        run: |
          terraform init
          terraform apply -auto-approve

      - name: Get Terraform Outputs
        id: terraform_outputs
        run: |
          terraform output -json > outputs.json
          echo "controller_ip=$(jq -r .controller_public_ip.value outputs.json)" >> $GITHUB_ENV
          echo "worker_ip=$(jq -r .worker_public_ip.value outputs.json)" >> $GITHUB_ENV

      - name: Create Ansible Inventory
        run: |
          echo "[k0s]" > ansible/inventory
          echo "${{ env.controller_ip }} ansible_ssh_user=ubuntu" >> ansible/inventory
          echo "${{ env.worker_ip }} ansible_ssh_user=ubuntu" >> ansible/inventory

      - name: List current directory
        working-directory: ansible
        run: ls -R

      - name: Display inventory file content
        working-directory: ansible
        run: cat ansible/inventory

      - name: Run Ansible Playbook
        env:
          ANSIBLE_HOST_KEY_CHECKING: false
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        run: |
          cd infra
          ansible-playbook -i ansible/inventory k0s.yml
