name: Deploy k0s Cluster

on:
  push:
    branches:
      - dev

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.x'

      - name: Install Ansible
        run: |
          python -m pip install --upgrade pip
          pip install ansible

      - name: Set up Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: 1.5.0

      - name: Run Terraform and capture outputs
        working-directory: infra
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        run: |
          terraform init
          terraform apply -auto-approve
          terraform output -json > "$GITHUB_WORKSPACE/outputs.json"

      - name: Verify JSON Output and Structure
        run: |
          if [ ! -f "$GITHUB_WORKSPACE/outputs.json" ]; then
            echo "Error: outputs.json was not created"
            exit 1
          else
            echo "Displaying outputs.json content:"
            cat "$GITHUB_WORKSPACE/outputs.json"
            echo "Displaying parsed JSON structure:"
            jq '.' "$GITHUB_WORKSPACE/outputs.json"  # Verify the JSON structure
          fi

      - name: Set Controller and Worker IPs as Environment Variables
        run: |
          controller_ip=$(jq -r '.controller_public_ip.value // empty' "$GITHUB_WORKSPACE/outputs.json")
          worker_ip=$(jq -r '.worker_public_ip.value // empty' "$GITHUB_WORKSPACE/outputs.json")
          if [[ -z "$controller_ip" || -z "$worker_ip" ]]; then
            echo "Error: Controller or Worker IP not found."
            exit 1
          fi
          echo "controller_ip=$controller_ip" >> $GITHUB_ENV
          echo "worker_ip=$worker_ip" >> $GITHUB_ENV
        shell: bash


      - name: Create Ansible Inventory
        run: |
          echo "[k0s]" > ansible/inventory
          echo "$controller_ip ansible_ssh_user=ubuntu" >> ansible/inventory
          echo "$worker_ip ansible_ssh_user=ubuntu" >> ansible/inventory

      - name: Display inventory file content
        working-directory: ansible
        run: cat inventory

      - name: Run Ansible Playbook
        env:
          ANSIBLE_HOST_KEY_CHECKING: false
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        run: |
          cd ansible
          ansible-playbook -i inventory k0s.yaml
