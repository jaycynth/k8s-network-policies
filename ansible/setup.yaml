---
- name: Install Cilium and Hubble on Master Node
  hosts: k8s_master
  become: yes
  tasks:
    - name: Install prerequisites
      apt:
        name:
          - curl
          - apt-transport-https
          - software-properties-common
        state: present

    - name: Get latest stable version of kubectl
      shell: "curl -s https://storage.googleapis.com/kubernetes-release/release/stable.txt"
      register: kubectl_version

    - name: Install kubectl
      shell: |
        curl -LO "https://storage.googleapis.com/kubernetes-release/release/{{ kubectl_version.stdout }}/bin/linux/amd64/kubectl" &&
        chmod +x ./kubectl &&
        mv ./kubectl /usr/local/bin/kubectl

    - name: Install Helm
      shell: |
        curl https://raw.githubusercontent.com/helm/helm/main/scripts/get-helm-3 | bash

    - name: Download Cilium CLI
      shell: "curl -L -o /tmp/cilium-linux-amd64.tar.gz https://github.com/cilium/cilium-cli/releases/latest/download/cilium-linux-amd64.tar.gz"

    - name: Extract Cilium CLI and move to /usr/local/bin
      shell: "tar xzf /tmp/cilium-linux-amd64.tar.gz -C /usr/local/bin/"

    - name: Add Helm repositories
      shell: |
        helm repo add cilium https://helm.cilium.io
        helm repo update
      ignore_errors: true

    - name: Set permissions on admin.conf file for reading
      file:
        path: /var/lib/k0s/pki/admin.conf
        mode: '0644'
      become: yes

    - name: Copy kubeconfig to the default location
      copy:
        src: /var/lib/k0s/pki/admin.conf
        dest: /home/{{ ansible_user }}/.kube/config
        owner: "{{ ansible_user }}"
        mode: '0600'

    - name: Revert permissions on admin.conf
      file:
        path: /var/lib/k0s/pki/admin.conf
        mode: '0600'
      become: yes

    - name: Verify kubectl connection to the cluster
      shell: "kubectl get nodes --kubeconfig /home/{{ ansible_user }}/.kube/config"
      register: kubectl_output
      retries: 5
      delay: 10
      failed_when: "'error' in kubectl_output.stderr"

    - name: Uninstall existing Cilium release if present
      shell: |
        helm uninstall cilium --namespace kube-system
      environment:
        KUBECONFIG: /home/{{ ansible_user }}/.kube/config
      ignore_errors: true

    - name: Install or upgrade Cilium
      shell: |
        helm install cilium cilium/cilium --namespace kube-system \
        --set kubeProxyReplacement=true \
        --set prometheus.enabled=true \
        --set operator.replicas=1 \
        --set operator.prometheus.enabled=true \
        --set hubble.enabled=true \
        --set hubble.metrics.enableOpenMetrics=true \
        --set hubble.metrics.enabled="{dns,drop,tcp,flow,port-distribution,icmp,httpV2:exemplars=true;labelsContext=source_ip\,source_namespace\,source_workload\,destination_ip\,destination_namespace\,destination_workload\,traffic_direction}"
      environment:
        KUBECONFIG: /home/{{ ansible_user }}/.kube/config

    - name: Install or upgrade Hubble
      shell: |
        helm upgrade cilium cilium/cilium --namespace kube-system \
         --reuse-values \
        --set hubble.relay.enabled=true \
        --set hubble.ui.enabled=true \
        --set hubble.relay.service.type=NodePort \
        --set hubble.ui.service.type=NodePort
      environment:
        KUBECONFIG: /home/{{ ansible_user }}/.kube/config

- name: Install Grafana and Prometheus on Worker Node
  hosts: k8s_worker
  become: yes
  tasks:
    - name: Install prerequisites
      apt:
        name:
          - curl
          - apt-transport-https
          - software-properties-common
          - git
        state: present

    - name: Install kubectl
      shell: |
        curl -LO "https://storage.googleapis.com/kubernetes-release/release/$(curl -s https://storage.googleapis.com/kubernetes-release/release/stable.txt)/bin/linux/amd64/kubectl" &&
        chmod +x ./kubectl &&
        mv ./kubectl /usr/local/bin/kubectl

    - name: Fetch kubeconfig from Master Node to Control Machine
      fetch:
        src: /home/{{ ansible_user }}/.kube/config
        dest: /tmp/kubeconfig
        flat: yes
      delegate_to: k8s_master

    - name: Copy kubeconfig from Control Machine to Worker Node
      copy:
        src: /tmp/kubeconfig
        dest: /home/{{ ansible_user }}/.kube/config
        owner: "{{ ansible_user }}"
        mode: '0600'

    - name: Check kubeconfig
      shell: cat /home/{{ ansible_user }}/.kube/config
      register: kubeconfig_check
      ignore_errors: true

    - name: Install Helm (if not already installed)
      shell: |
        curl https://raw.githubusercontent.com/helm/helm/main/scripts/get-helm-3 | bash

    - name: Add Grafana and Prometheus repositories
      shell: |
        helm repo add grafana https://grafana.github.io/helm-charts
        helm repo add prometheus-community https://prometheus-community.github.io/helm-charts
        helm repo update
      ignore_errors: true

    - name: Create a custom values file for Prometheus
      copy:
        dest: /tmp/prometheus-values.yaml
        content: |
          server:
            extraScrapeConfigs:
              - job_name: 'hubble'
                metrics_path: '/metrics'
                static_configs:
                  - targets: 
                      - 'hubble-relay.kube-system.svc.cluster.local:4245'
                relabel_configs:
                  - source_labels: [__meta_kubernetes_service_label_app_kubernetes_io_name]
                    action: keep
                    regex: hubble-relay
            persistentVolume:
              enabled: true
              existingClaim: prometheus-pvc


    - name: Uninstall existing Prometheus release if present
      shell: |
        helm uninstall prometheus --namespace kube-system
      ignore_errors: true
      environment:
        KUBECONFIG: /home/{{ ansible_user }}/.kube/config

    - name: Uninstall existing Grafana release if present
      shell: |
        helm uninstall grafana --namespace kube-system
      ignore_errors: true
      environment:
        KUBECONFIG: /home/{{ ansible_user }}/.kube/config

    - name: Create PersistentVolume
      shell: kubectl apply -f prometheus-pv.yaml
      environment:
        KUBECONFIG: /home/{{ ansible_user }}/.kube/config

    - name: Create PersistentVolumeClaim
      shell: kubectl apply -f prometheus-pvc.yaml
      environment:
        KUBECONFIG: /home/{{ ansible_user }}/.kube/config

    - name: Install or upgrade Prometheus
      command: >
        helm install prometheus prometheus-community/prometheus --namespace kube-system 
        --set server.service.type=NodePort -f /tmp/prometheus-values.yaml
      environment:
        KUBECONFIG: /home/{{ ansible_user }}/.kube/config

    - name: Install or upgrade Grafana
      command: >
        helm install grafana grafana/grafana --namespace kube-system 
        --set adminPassword='admin' 
        --set service.type=NodePort
      environment:
        KUBECONFIG: /home/{{ ansible_user }}/.kube/config
